Hibernate:
    create table booking
    (
        id             bigint generated by default as identity,
        booking_status varchar(255) not null check (booking_status in ('RESERVED', 'CONFIRMED', 'CANCELLED')),
        check_in_date  date         not null,
        check_out_date date         not null,
        created_at     timestamp(6),
        rooms_count    integer      not null,
        updated_at     timestamp(6),
        hotel_id       bigint       not null,
        payment_id     bigint,
        room_id        bigint       not null,
        users_id       bigint       not null,
        primary key (id)
    )
Hibernate:
    create table booking_guest
    (
        booking_id bigint not null,
        guest_id   bigint not null,
        primary key (booking_id, guest_id)
    )
Hibernate:
    create table guest
    (
        id         bigint generated by default as identity,
        created_at timestamp(6),
        gender     varchar(255),
        name       varchar(255),
        users_id   bigint not null,
        primary key (id)
    )
Hibernate:
    create table hotel
    (
        id           bigint generated by default as identity,
        active       boolean      not null,
        amenities    TEXT[],
        city         varchar(255),
        address      varchar(255),
        email        varchar(255),
        location     varchar(255),
        phone_number varchar(255),
        created_at   timestamp(6),
        name         varchar(255) not null,
        photos       TEXT[],
        updated_at   timestamp(6),
        primary key (id)
    )
Hibernate:
    create table inventory
    (
        id           bigint generated by default as identity,
        booked_count INTEGER DEFAULT 0 not null,
        city         varchar(255)      not null,
        closed       boolean           not null,
        created_at   timestamp(6),
        date         date              not null,
        price        numeric(10, 2)    not null,
        surge_factor numeric(5, 2)     not null,
        total_count  integer           not null,
        updated_at   timestamp(6),
        hotel_id     bigint            not null,
        room_id      bigint            not null,
        primary key (id)
    )
Hibernate:
    create table payment
    (
        id             bigint generated by default as identity,
        amount         numeric(10, 2) not null,
        created_at     timestamp(6),
        payment_status varchar(255)   not null check (payment_status in ('PENDING', 'CONFIRMED', 'CANCELLED')),
        transaction_id varchar(255)   not null,
        updated_at     timestamp(6),
        primary key (id)
    )
Hibernate:
    create table room
    (
        id          bigint generated by default as identity,
        amenities   TEXT[],
        base_price  numeric(10, 2) not null,
        capacity    integer        not null,
        created_at  timestamp(6),
        photos      TEXT[],
        total_count integer        not null,
        type        varchar(255)   not null,
        updated_at  timestamp(6),
        hotel_id    bigint         not null,
        primary key (id)
    )
Hibernate:
    create table users
    (
        id       bigint generated by default as identity,
        email    varchar(255) not null,
        name     varchar(255),
        password varchar(255) not null,
        primary key (id)
    )
Hibernate:
    create table users_roles
    (
        users_id bigint not null,
        roles    bytea
    )

Hibernate:
    alter table if exists booking
    add constraint UKxcv4bjb631pysj91ybp40vpo unique (payment_id)

Hibernate:
    alter table if exists inventory
    add constraint unique_hotel_room_date unique (hotel_id, room_id, date)

Hibernate:
    alter table if exists payment
    add constraint UKtacis04bqalsngo46yvxlo7yb unique (transaction_id)

Hibernate:
    alter table if exists users
    add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate:
    alter table if exists booking
    add constraint FKhacdq9bfa3r9xdimovsnonbyi
    foreign key (hotel_id)
    references hotel
Hibernate:
    alter table if exists booking
    add constraint FK70t92vvx289ayx2hq2v4hdcjl
    foreign key (payment_id)
    references payment
Hibernate:
    alter table if exists booking
    add constraint FKq83pan5xy2a6rn0qsl9bckqai
    foreign key (room_id)
    references room
Hibernate:
    alter table if exists booking
    add constraint FK158twsxs1y4jvfd99k821m4e4
    foreign key (users_id)
    references users
Hibernate:
    alter table if exists booking_guest
    add constraint FKbidkmu7pdnm82qpo2r3n699yd
    foreign key (guest_id)
    references guest
Hibernate:
    alter table if exists booking_guest
    add constraint FKngrkuwlsaqjwe4mycjdvhuwtk
    foreign key (booking_id)
    references booking
Hibernate:
    alter table if exists guest
    add constraint FKsif6p6jlj5qcadnjl4jbo6icn
    foreign key (users_id)
    references users
Hibernate:
    alter table if exists inventory
    add constraint FK81iasgjh573hbsoluoj670bkj
    foreign key (hotel_id)
    references hotel
Hibernate:
    alter table if exists inventory
    add constraint FKkkm00xm4as7hupix7tlg0q3of
    foreign key (room_id)
    references room
Hibernate:
    alter table if exists room
    add constraint FKdosq3ww4h9m2osim6o0lugng8
    foreign key (hotel_id)
    references hotel
Hibernate:
    alter table if exists users_roles
    add constraint FKml90kef4w2jy7oxyqv742tsfc
    foreign key (users_id)
    references users

Hibernate:
    alter table if exists hotel
alter column amenities set data type TEXT[]
Hibernate:
    alter table if exists hotel
alter column photos set data type TEXT[]
Hibernate:
    alter table if exists room
alter column amenities set data type TEXT[]
Hibernate:
    alter table if exists room
alter column photos set data type TEXT[]